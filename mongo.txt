// 1. Create a collection named orders.
db.createCollection('orders')

// 2. Insert at least 3 documents that represent an order.
db.orders.insert({orderDate: new Date("1990-06-16"), orderTotal: 6, lineItems: [{unitPrice: 1, quantity: 6, productName: "ear-plugs"}]})
db.orders.insert({orderDate: new Date("1990-03-23"), orderTotal: 150, lineItems: [{unitPrice: 15, quantity: 10, productName: "acoustic-foam"}]})
db.orders.insert({orderDate: new Date("2016-12-18"), orderTotal: 50, lineItems: [{unitPrice: 50, quantity: 1, productName: "champagne"}]})

// 3. Find a single order document, any order document.
db.orders.find({"lineItems.productName": /ear-plugs/})

// 4. Find all orders and make them look pretty.
db.orders.find().pretty()

// 5. Find all orders with an orderDate that is prior to 1/1/2016.
db.orders.find({orderDate: {$lt: new Date("d2016-01-01")}}).pretty()

// 6. Find all orders with an orderDate that is after 1/1/2016.
db.orders.find({orderDate: {$gt: new Date("2016-01-01")}}).pretty()

// 7. Find orders with lineItems that have a quantity that is less than 50, but greater than 5. 
db.orders.find({$and: [{"lineItems.quantity": {$gt: 5}}, {"lineItems.quantity": {$lt: 50}}]}).pretty()

// 8. Update one of your line items to 42.99.
db.orders.update({"lineItems.productName": "champagne"}, 
{$set: {orderTotal: 42.99, "lineItems.$.quantity": 1, "lineItems.$.unitPrice": 42.99}})

// 9. Remove one of your orders.
db.orders.remove({"lineItems.productName": "acoustic-foam"})
